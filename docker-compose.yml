version: "3.3"

services:
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOME}/.docker/config.json:/config.json
    command: --label-enable --cleanup --schedule "0 4 * * *"

  traefik:
    image: traefik
    restart: always
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # traefik dashboard
    command:
      - --api.insecure=true
      - --api.dashboard=false
      - --api.debug=true
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=default
      - --entrypoints.web.address=:80
      - --entrypoints.websecured.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecured
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=${SSL_ACME_EMAIL}
      - --certificatesresolvers.myresolver.acme.storage=acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      default:
        ipv4_address: 172.20.50.1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.api.service=api@internal"

  plex:
    image: linuxserver/plex
    container_name: plex
    networks:
      default:
        ipv4_address: 172.20.1.1
    ports:
      - 32400:32400/tcp
      - 32400:32400/udp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)
      - traefik.http.routers.plex.entrypoints=websecured
      - traefik.http.services.plex.loadbalancer.server.port=32400
      - traefik.http.routers.plex.tls.certresolver=myresolver
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - ADVERTISE_IP="https://plex.${DOMAIN}:443"
    volumes:
      - ${PLEX}/config:/config
      - ${TV_SHOWS}:/tv
      - ${MOVIES}:/movies
      - ${PICTURES}:/pictures
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    networks:
      default:
        ipv4_address: 172.20.1.2
    ports:
      - 8989:8989
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.routers.sonarr.entrypoints=websecured
      - traefik.http.routers.sonarr.tls.certresolver=myresolver
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SONARR}/config:/config
      - ${TV_SHOWS}:/tv
      - ${TORRENT_DOWNLOADS}:/downloads
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    networks:
      default:
        ipv4_address: 172.20.1.3
    ports:
      - 7878:7878
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.routers.radarr.entrypoints=websecured
      - traefik.http.routers.radarr.tls.certresolver=myresolver
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${RADARR}/config:/config
      - ${MOVIES}:/movies
      - ${TORRENT_DOWNLOADS}:/downloads
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    networks:
      default:
        ipv4_address: 172.20.1.4
    ports:
      - 6767:6767
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.bazarr.rule=Host(`bazarr.${DOMAIN}`)
      - traefik.http.routers.bazarr.entrypoints=websecured
      - traefik.http.routers.bazarr.tls.certresolver=myresolver
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${BAZARR}/config:/config
      - ${MOVIES}:/movies
      - ${TV_SHOWS}:/tv
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    networks:
      default:
        ipv4_address: 172.20.1.5
    ports:
      - 9117:9117
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)
      - traefik.http.routers.jackett.entrypoints=websecured
      - traefik.http.routers.jackett.tls.certresolver=myresolver
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - AUTO_UPDATE=true
    volumes:
      - ${JACKETT}/config:/config
    restart: unless-stopped

  nzbhydra2:
    image: linuxserver/nzbhydra2
    container_name: nzbhydra2
    networks:
      default:
        ipv4_address: 172.20.1.6
    ports:
      - 5076:5076
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.nzbhydra.rule=Host(`nzbhydra.${DOMAIN}`)
      - traefik.http.routers.nzbhydra.entrypoints=websecured
      - traefik.http.routers.nzbhydra.tls.certresolver=myresolver
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${NZBHYDRA2}/config:/config
      - ${NZBHYDRA2}/downloads:/downloads
    restart: unless-stopped

  deluge:
    image: linuxserver/deluge
    container_name: deluge
    networks:
      default:
        ipv4_address: 172.20.1.7
    ports:
      - 8112:8112
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.deluge.rule=Host(`deluge.${DOMAIN}`)
      - traefik.http.routers.deluge.entrypoints=websecured
      - traefik.http.routers.deluge.tls.certresolver=myresolver
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DELUGE}/config:/config
      - ${TORRENT_DOWNLOADS}:/downloads
    restart: unless-stopped

  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    networks:
      default:
        ipv4_address: 172.20.1.8
    ports:
      - 9050:8080
      - 9051:9090
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)
      - traefik.http.routers.sabnzbd.entrypoints=websecured
      - traefik.http.routers.sabnzbd.tls.certresolver=myresolver
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${SABNZBD}/config:/config
      - ${USENET_DOWNLOADS}/complete:/downloads
      - ${USENET_DOWNLOADS}/incomplete:/incomplete-downloads
    restart: unless-stopped

  calibre:
    image: linuxserver/calibre
    container_name: calibre
    networks:
      default:
        ipv4_address: 172.20.2.1
    ports:
      - 9080:8080
      - 9081:8081
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.calibre.rule=Host(`calibre.${DOMAIN}`)
      - traefik.http.routers.calibre.entrypoints=websecured
      - traefik.http.routers.calibre.tls.certresolver=myresolver
      - traefik.http.services.calibre.loadbalancer.server.port=8080
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - GUAC_USER=${CALIBRE_USERNAME}
      - GUAC_PASS=${CALIBRE_PASSWORD}
    volumes:
      - ${CALIBRE}:/config
    restart: unless-stopped

  portainer:
    image: portainer/portainer
    container_name: portainer
    networks:
      default:
        ipv4_address: 172.20.2.2
    ports:
      - 9000:9000
      - 8000:8000
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN}`)
      - traefik.http.routers.portainer.entrypoints=websecured
      - traefik.http.routers.portainer.tls.certresolver=myresolver
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    restart: always
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PORTAINER}:/data

  portainer_agent:
    image: portainer/agent
    container_name: portainer-agent
    networks:
      default:
        ipv4_address: 172.20.2.3
    ports:
      - 9001:9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    restart: always
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=false

  organizr:
    image: organizrtools/organizr-v2
    container_name: organizr
    networks:
      default:
        ipv4_address: 172.20.2.4
    ports:
      - 9983:80
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.orzanizr.rule=Host(`organizr.${DOMAIN}`)
      - traefik.http.routers.orzanizr.entrypoints=websecured
      - traefik.http.routers.orzanizr.tls.certresolver=myresolver
      - traefik.http.services.organizr.loadbalancer.server.port=80
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${ORGANIZR}:/config
    restart: unless-stopped

  duplicati:
    image: linuxserver/duplicati
    container_name: duplicati
    networks:
      default:
        ipv4_address: 172.20.2.5
    ports:
      - 8200:8200
    labels:
      - com.centurylinklabs.duplicati.enable=true
      - traefik.enable=true
      - traefik.http.routers.duplicati.rule=Host(`duplicati.${DOMAIN}`)
      - traefik.http.routers.duplicati.entrypoints=websecured
      - traefik.http.routers.duplicati.tls.certresolver=myresolver
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DUPLICATI}/config:/config
      - ${DUPLICATI}/backups:/backups
      - /:/source
    restart: unless-stopped

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
